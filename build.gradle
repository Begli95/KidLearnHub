import com.sun.tools.javac.Main

plugins {
    id 'java'
    id 'application'
    id 'com.heroku.sdk.heroku-gradle' version '2.0.0'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group 'com.kidlearnhub'
version '1.0-SNAPSHOT'
mainClassName = 'com.kidlearnhub.Main'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

dependencies {
    implementation group: 'io.javalin', name: 'javalin', version: '4.6.8'
    implementation group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.12.RELEASE'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.31'
    implementation 'org.postgresql:postgresql:42.5.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    implementation 'com.github.jknack:handlebars:4.3.1'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}



task stage(dependsOn: ['build', 'clean']) {
    doLast {
        println 'Staging the application!'
    }
}

heroku {
    appName = "kidlearnhubn-f55200b1939d"
    processTypes(
            web: "java -Dserver.port=\$PORT -jar build/libs/${project.name}-${project.version}.jar"
    )
}

shadowJar {
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': mainClassName
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

